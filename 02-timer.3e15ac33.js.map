{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,aAIA,MAAMC,EAAiBC,SAASC,eAAe,mBACzCC,EAAWF,SAASG,cAAc,gBAClCC,EAASJ,SAASG,cAAc,eAChCE,EAAUL,SAASG,cAAc,gBACjCG,EAAYN,SAASG,cAAc,kBACnCI,EAAYP,SAASG,cAAc,kBAqBzC,IAAIK,EAyBJ,SAASC,EAAcC,GACrB,MAAMC,EAOR,SAAmBC,GACjB,MAAMC,EAAS,IACTC,EAAkB,GAATD,EACTE,EAAgB,GAATD,EACPE,EAAa,GAAPD,EAENE,EAAOC,KAAKC,MAAMP,EAAKI,GACvBI,EAAQF,KAAKC,MAAMP,EAAMI,EAAOD,GAChCM,EAAUH,KAAKC,MAAMP,EAAOI,EAAOD,EAAQD,GAC3CQ,EAAUJ,KAAKC,MAAMP,EAAQI,EAAOD,EAAQD,EAAUD,GAE5D,MAAO,C,KAAEI,E,MAAMG,E,QAAOC,E,QAASC,E,CAlBlBC,CAAUb,GACvBN,EAAOoB,YAAcC,EAAed,EAAKM,MACzCZ,EAAQmB,YAAcC,EAAed,EAAKS,OAC1Cd,EAAUkB,YAAcC,EAAed,EAAKU,SAC5Cd,EAAUiB,YAAcC,EAAed,EAAKW,Q,CAiB9C,SAASG,EAAeC,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,EAlEtC,EAAA/B,EAAAgC,SAAU,mBAAoB,CAC5BC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACeA,EAAc,IAEf,IAAIH,MACtBI,EAAAC,GAASC,OAAOC,QAAQ,sCACxBtC,EAASuC,UAAW,IAEpBJ,EAAAC,GAASC,OAAOG,QAAQ,gCACxBxC,EAASuC,UAAW,E,IAO1BvC,EAASyC,iBAAiB,SAAS,KACjC,MAAMC,EAAe,IAAIX,KAAKlC,EAAe2B,OACvCmB,EAAM,IAAIZ,KAEZW,GAAgBC,IAIpB3C,EAASuC,UAAW,EACpBjC,EAAoBsC,aAAY,KAC9B,MAAMpC,EAAiBkC,EAAe,IAAIX,KAEtCvB,GAAkB,GACpBqC,cAAcvC,GACdC,EAAc,GACdP,EAASuC,UAAW,EACpBJ,EAAAC,GAASU,OAAON,QAAQ,aAAc,gCAEtCjC,EAAcC,EAAe,GAE9B,KAAK","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport Notiflix from \"notiflix\";\n\nconst dateTimePicker = document.getElementById(\"datetime-picker\");\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\n// Налаштування flatpickr\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      Notiflix.Notify.failure(\"Please choose a date in the future\");\n      startBtn.disabled = true;\n    } else {\n      Notiflix.Notify.success(\"You can start the timer now!\");\n      startBtn.disabled = false;\n    }\n  },\n});\n\nlet countdownInterval;\n\nstartBtn.addEventListener('click', () => {\n  const selectedDate = new Date(dateTimePicker.value);\n  const now = new Date();\n\n  if (selectedDate <= now) {\n    return;\n  }\n\n  startBtn.disabled = true;\n  countdownInterval = setInterval(() => {\n    const timeDifference = selectedDate - new Date();\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI(0);\n      startBtn.disabled = false;\n      Notiflix.Report.success(\"Time's up!\", \"The countdown has finished.\");\n    } else {\n      updateTimerUI(timeDifference);\n    }\n  }, 1000);\n});\n\nfunction updateTimerUI(timeDifference) {\n  const time = convertMs(timeDifference);\n  daysEl.textContent = addLeadingZero(time.days);\n  hoursEl.textContent = addLeadingZero(time.hours);\n  minutesEl.textContent = addLeadingZero(time.minutes);\n  secondsEl.textContent = addLeadingZero(time.seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}"],"names":["$fbklV","parcelRequire","$40d383fb392a7037$var$dateTimePicker","document","getElementById","$40d383fb392a7037$var$startBtn","querySelector","$40d383fb392a7037$var$daysEl","$40d383fb392a7037$var$hoursEl","$40d383fb392a7037$var$minutesEl","$40d383fb392a7037$var$secondsEl","$40d383fb392a7037$var$countdownInterval","$40d383fb392a7037$var$updateTimerUI","timeDifference","time","ms","second","minute","hour","day","days","Math","floor","hours","minutes","seconds","$40d383fb392a7037$var$convertMs","textContent","$40d383fb392a7037$var$addLeadingZero","value","toString","padStart","default","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$7Y9D8","Notify","failure","disabled","success","addEventListener","selectedDate","now","setInterval","clearInterval","Report"],"version":3,"file":"02-timer.3e15ac33.js.map"}