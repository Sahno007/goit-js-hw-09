{"mappings":"iiBAAA,IA8BIA,EA9BJC,EAAAC,EAAA,S,aAIMC,EAAiBC,SAASC,eAAe,mBACzCC,EAAWF,SAASG,cAAc,gBAClCC,EAASJ,SAASG,cAAc,eAChCE,EAAUL,SAASG,cAAc,gBACjCG,EAAYN,SAASG,cAAc,kBACnCI,EAAYP,SAASG,cAAc,kBA8CzC,SAASK,EAAcC,GACrB,IAOiBC,EACXC,EACAC,EACAC,EACAC,EAEAC,EACAC,EACAC,EACAC,EAhBAC,GAOWT,EAPMD,EAWjBK,EAAa,IADbD,EAAgB,IADhBD,EAAkB,IADlBD,EAAS,OAKTI,EAAOK,KAAKC,MAAMX,EAAKI,GACvBE,EAAQI,KAAKC,MAAMX,EAAMI,EAAOD,GAChCI,EAAUG,KAAKC,MAAMX,EAAOI,EAAOD,EAAQD,GAC3CM,EAAUE,KAAKC,MAAMX,EAAQI,EAAOD,EAAQD,EAAUD,GAErD,CAAEI,OAAMC,QAAOC,UAASC,YAjB/Bd,EAAOkB,YAAcC,EAAeJ,EAAKJ,MACzCV,EAAQiB,YAAcC,EAAeJ,EAAKH,OAC1CV,EAAUgB,YAAcC,EAAeJ,EAAKF,SAC5CV,EAAUe,YAAcC,EAAeJ,EAAKD,Q,CAiB9C,SAASK,EAAeC,GACtB,OAAOA,EAAMC,WAAWC,SAAS,EAAG,I,EAlEtC,EAAA7B,EAAA8B,SAAU,mBAAoB,CAC5BC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACeA,EAAc,IAEf,IAAIH,MACtBI,EAAAC,GAASC,OAAOC,QAAQ,sCACxBpC,EAASqC,UAAW,IAEpBJ,EAAAC,GAASC,OAAOG,QAAQ,gCACxBtC,EAASqC,UAAW,E,IAO1BrC,EAASuC,iBAAiB,SAAS,WACjC,IAAMC,EAAe,IAAIX,KAAKhC,EAAeyB,OACvCmB,EAAM,IAAIZ,KAEZW,GAAgBC,IAIpBzC,EAASqC,UAAW,EACpB3C,EAAoBgD,aAAY,WAC9B,IAAMnC,EAAiBiC,EAAe,IAAIX,KAEtCtB,GAAkB,GACpBoC,cAAcjD,GACdY,EAAc,GACdN,EAASqC,UAAW,EACpBJ,EAAAC,GAASU,OAAON,QAAQ,aAAc,gCAEtChC,EAAcC,E,GAEf,K","sources":["src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport Notiflix from \"notiflix\";\n\nconst dateTimePicker = document.getElementById(\"datetime-picker\");\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\n// Налаштування flatpickr\nflatpickr(\"#datetime-picker\", {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n\n    if (selectedDate <= new Date()) {\n      Notiflix.Notify.failure(\"Please choose a date in the future\");\n      startBtn.disabled = true;\n    } else {\n      Notiflix.Notify.success(\"You can start the timer now!\");\n      startBtn.disabled = false;\n    }\n  },\n});\n\nlet countdownInterval;\n\nstartBtn.addEventListener('click', () => {\n  const selectedDate = new Date(dateTimePicker.value);\n  const now = new Date();\n\n  if (selectedDate <= now) {\n    return;\n  }\n\n  startBtn.disabled = true;\n  countdownInterval = setInterval(() => {\n    const timeDifference = selectedDate - new Date();\n\n    if (timeDifference <= 0) {\n      clearInterval(countdownInterval);\n      updateTimerUI(0);\n      startBtn.disabled = false;\n      Notiflix.Report.success(\"Time's up!\", \"The countdown has finished.\");\n    } else {\n      updateTimerUI(timeDifference);\n    }\n  }, 1000);\n});\n\nfunction updateTimerUI(timeDifference) {\n  const time = convertMs(timeDifference);\n  daysEl.textContent = addLeadingZero(time.days);\n  hoursEl.textContent = addLeadingZero(time.hours);\n  minutesEl.textContent = addLeadingZero(time.minutes);\n  secondsEl.textContent = addLeadingZero(time.seconds);\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}"],"names":["$84b9dae4df53835d$var$countdownInterval","$dbdyf","parcelRequire","$84b9dae4df53835d$var$dateTimePicker","document","getElementById","$84b9dae4df53835d$var$startBtn","querySelector","$84b9dae4df53835d$var$daysEl","$84b9dae4df53835d$var$hoursEl","$84b9dae4df53835d$var$minutesEl","$84b9dae4df53835d$var$secondsEl","$84b9dae4df53835d$var$updateTimerUI","timeDifference","ms","second","minute","hour","day","days","hours","minutes","seconds","time","Math","floor","textContent","$84b9dae4df53835d$var$addLeadingZero","value","toString","padStart","default","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","$parcel$interopDefault","$6JpON","Notify","failure","disabled","success","addEventListener","selectedDate","now","setInterval","clearInterval","Report"],"version":3,"file":"02-timer.2baa4603.js.map"}