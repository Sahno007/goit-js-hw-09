{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGmB,MAAbC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYJ,EAAKE,cAAc,sBAC/BG,EAAcL,EAAKE,cAAc,wBACjCI,EAAeN,EAAKE,cAAc,yBAGqB,SAApDK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAKcT,EAAtBiB,iBAAiB,UAAUC,MAAOC,IACrCA,EAAMC,iBAEN,MAAMC,EAAeC,SAASnB,EAAWoB,OACnCC,EAAOF,SAASlB,EAAUmB,OAC1BE,EAASH,SAASjB,EAAYkB,OAEpCjB,EAAaoB,UAAW,EAExB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAQE,IAC3B,UACQpB,EAAcoB,EAAGN,GAAgBM,EAAI,GAAKH,GAChDI,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqBH,I,CAC7C,MAAOI,GACPH,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoBD,EAAIvB,W,CAIpDF,EAAaoB,UAAW,CAAK,IAI/B,MAAMO,EAAU,CACdC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACFA,EAAc,GAAK,IAAIH,MACzBT,EAAA9B,GAAS+B,OAAOY,QAAQ,sCACxBnC,EAAaoB,UAAW,GAExBpB,EAAaoB,UAAW,C,GAK9BgB,UAAU,mBAAoBT","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\"; // Переконайтеся, що бібліотека notiflix підключена до вашого проекту\n\n// Отримання полів форми\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\nconst submitButton = form.querySelector('button[type=\"submit\"]');\n\n// Функція для створення промісу з відповідним виконанням чи відхиленням\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Обробник події відправки форми\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n\n  const initialDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  submitButton.disabled = true;\n\n  for (let i = 1; i <= amount; i++) {\n    try {\n      await createPromise(i, initialDelay + (i - 1) * step);\n      Notiflix.Notify.Success(`✅ Fulfilled promise ${i}`);\n    } catch (error) {\n      Notiflix.Notify.Failure(`❌ Rejected promise ${error.position}`);\n    }\n  }\n\n  submitButton.disabled = false;\n});\n\n// Ініціалізація flatpickr\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < new Date()) {\n      Notiflix.Notify.Warning(\"Please choose a date in the future\");\n      submitButton.disabled = true;\n    } else {\n      submitButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$delayInput","$47d4ff9957288465$var$stepInput","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$submitButton","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","async","event","preventDefault","initialDelay","parseInt","value","step","amount","disabled","i","$parcel$interopDefault","Notify","Success","error","Failure","$47d4ff9957288465$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","Warning","flatpickr"],"version":3,"file":"03-promises.227e19cd.js.map"}